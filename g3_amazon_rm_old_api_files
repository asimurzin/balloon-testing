#!/bin/bash

#----------------------------------------------------------------------------------------
## Copyright 2010 Alexey Petrov
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## Author : Andrey Simurzin
##


#-----------------------------------------------------------------------------------------
#source common function
. common.sh


#-----------------------------------------------------------------------------------------
testing_rm_old_api_file()
{
   an_old_api_number=$1
   `remove_log_prepare_test_case`
   a_study_name=`prepare_testing_data ${an_old_api_number}` 

  echo "-------------------- Testing amazon_rm \"${an_old_api_number}\" api files -----------------------"
  a_list_filenames=`create_list_filenames_in_casedir`
  a_list_files=`create_list_case_files ${a_list_filenames}`
  a_list_file_to_rm=`python -c "temp='${a_list_files}';_list=temp.split(' '); import os; print os.path.abspath(_list[ 1 ] ),' ',os.path.abspath(_list[ 0 ] )" `

  amazon_rm.py --study-name=${a_study_name}  ${a_list_file_to_rm} --debug > log.amazon_rm_old_api_files 2>&1
  if [ $? -ne 0 ] ; then
     echo "An error have appeared during execution of amazon_rm.py" 
     cat log.amazon_rm_old_api_files
     rm log.amazon_rm_old_api_files
     exit -1
  else
     amazon_ls.py ${a_study_name} --debug > log.list_files 2>&1
     an_allright="True"
     for a_file in ${a_list_file_to_rm}
     do
        count_entrances=`fgrep -c ${a_file}  log.list_files `
        if [ ${count_entrances} -ne 0 ]; then
           an_allright="False"
           a_not_deleted_file=${a_filename}
           break
        fi
     done
     if [ "${an_allright}" = "False" ]; then
        echo ' ERROR : The '${a_not_deleted_file}' file have not been removed from the s3 '
        rm log.list_files
        rm log.amazon_rm_old_api_files
        exit -1
     else
        echo '----------------------------------- OK -----------------------------------------'
        echo ''
        rm log.list_files 
        `remove_log_prepare_test_case`
     fi
  fi
}

#-----------------------------------------------------------------------------------------
for an_api in ${a_list_old_api}
do
  testing_rm_old_api_file ${an_api}
done
