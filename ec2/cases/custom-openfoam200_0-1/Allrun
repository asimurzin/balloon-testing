#!/bin/bash -x

#--------------------------------------------------------------------------------------
cd ${0%/*} || exit 1    # run from this directory

source ${WM_PROJECT_DIR}/bin/tools/RunFunctions # source tutorial run functions

a_number_nodes=${1}; shift

an_openmpi_hostfile=${1}; shift


#--------------------------------------------------------------------------------------
# Get application name
a_cur_dir=`pwd`

export FOAM_USER_APPBIN=${a_cur_dir}
export PATH=${FOAM_USER_APPBIN}:${PATH}

export FOAM_USER_LIBBIN=${a_cur_dir}
export LD_LIBRARY_PATH=${FOAM_USER_LIBBIN}:${LD_LIBRARY_PATH}

export application=`./code/Allwmake`

if [ ${application} == "ERROR" ] ; then
    exit -1
fi


#--------------------------------------------------------------------------------------
setDamBreakFine ()
{
    blockMeshDict="constant/polyMesh/blockMeshDict"
    controlDict="system/controlDict"
    sed \
    -e s/"23 8"/"46 10"/g \
    -e s/"19 8"/"40 10"/g \
    -e s/"23 42\(.*\) 1 1)"/"46 76\1 2 1)"/g \
    -e s/"4 42\(.*\) 1 1)"/"4 76\1 2 1)"/g \
    -e s/"19 42\(.*\) 1 1)"/"40 76\1 2 1)"/g \
    ${blockMeshDict} > temp.$$
    mv temp.$$ ${blockMeshDict}
    sed \
    -e s/"\(deltaT[ \t]*\) 0.001;"/"\1 5e-04;"/g \
    -e s/"\(endTime[ \t]*\) 0.9;"/"\1 0.9;"/g \
    ${controlDict} > temp.$$
    mv temp.$$ ${controlDict}
}
setDamBreakFine

runApplication blockMesh
cloudflu-study-upload ./constant ./log.blockMesh $* &

runApplication setFields
cloudflu-study-upload ./0 ./log.setFields $* &


#--------------------------------------------------------------------------------------
a_slots=`python -c "import os; print os.sysconf( 'SC_NPROCESSORS_ONLN' )"`
a_number_processors=`python -c "print ${a_number_nodes} * ${a_slots}"`
weights=`python -c "print tuple( [ 1 for an_id in range( ${a_number_processors} ) ] )"`
processorWeights=`echo ${weights} | sed -e "s%,%%g"`

cat > ./system/decomposeParDict <<EOF
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      decomposeParDict;
}
numberOfSubdomains ${a_number_processors};
method scotch;
scotchCoeffs
{
    processorWeights ${processorWeights};
}
EOF

runApplication decomposePar
cloudflu-study-upload ./system ./log.decomposePar $* &


#--------------------------------------------------------------------------------------
cloudflu-timestamps-upload \
  "mpirun --hostfile ${an_openmpi_hostfile} -x PATH -x LD_LIBRARY_PATH -np ${a_number_processors} ${application} -case . -parallel" \
     --finish-hook="cloudflu-timestamps-hook" \
     --solver-log="log.solver" \
     $*


#--------------------------------------------------------------------------------------
