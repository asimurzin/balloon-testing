#!/bin/bash -x

#--------------------------------------------------------------------------------------
## Copyright 2010 Alexey Petrov
##
## Licensed under the Apache License, Version 2.0 (the "License");
## you may not use this file except in compliance with the License.
## You may obtain a copy of the License at
##
##     http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
##
## Author : Alexey Petrov
##


#--------------------------------------------------------------------------------------
cd ${0%/*} || exit 1    # run from this directory
a_cur_dir=`pwd`

source ${WM_PROJECT_DIR}/bin/tools/RunFunctions # source tutorial run functions

a_number_nodes=${1}; shift

an_openmpi_hostfile=${1}; shift

application="pimpleFoam"

if [ "${a_number_nodes}x" == "x" ] ; then
    a_run_local='yes'
    a_number_nodes=1
    rm -fr ${a_cur_dir}/log.*
fi


#--------------------------------------------------------------------------------------
${a_cur_dir}/generateMeshDict.pl 0.04 0.392 0.4 1.36 0.56 0.002 > ${a_cur_dir}/constant/polyMesh/blockMeshDict 

runApplication blockMesh
if [ "${a_run_local}x" != "yesx" ] ; then
    cloudflu-study-upload ${a_cur_dir}/constant ${a_cur_dir}/log.blockMesh $* &
fi


#--------------------------------------------------------------------------------------
a_slots=`python -c "import os; print os.sysconf( 'SC_NPROCESSORS_ONLN' )"`
a_number_processors=`python -c "print ${a_number_nodes} * ${a_slots}"`
weights=`python -c "print tuple( [ 1 for an_id in range( ${a_number_processors} ) ] )"`
processorWeights=`echo ${weights} | sed -e "s%,%%g"`

cat > ${a_cur_dir}/system/decomposeParDict <<EOF
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      decomposeParDict;
}
numberOfSubdomains ${a_number_processors};
method scotch;
scotchCoeffs
{
    processorWeights ${processorWeights};
}
EOF

rm -rf ${a_cur_dir}/processor*

runApplication decomposePar
if [ "${a_run_local}x" != "yesx" ] ; then
    cloudflu-study-upload ${a_cur_dir}/system ${a_cur_dir}/log.decomposePar $* &
fi


#--------------------------------------------------------------------------------------
# To prepare a specific "launcher.sh" for this application
# to secure that it is run in proper environment
echo \#!/usr/bin/env bash > ${a_cur_dir}/launcher.sh
echo source /etc/profile >> ${a_cur_dir}/launcher.sh
echo ${application} -case ${a_cur_dir} -parallel >> ${a_cur_dir}/launcher.sh
chmod 755 ${a_cur_dir}/launcher.sh
if [ "${a_run_local}x" != "yesx" ] ; then
    cloudflu-study-upload ${a_cur_dir}/launcher.sh $* &
fi


#--------------------------------------------------------------------------------------
# Run the 'application' as well as timestamps watcher
if [ "${a_run_local}x" != "yesx" ] ; then
    cloudflu-timestamps-upload \
	"mpirun --hostfile ${an_openmpi_hostfile} -np ${a_number_processors} ${a_cur_dir}/launcher.sh" \
	--finish-hook="cloudflu-timestamps-hook" \
	--solver-log="log.solver" \
	$*
else
    mpirun -np ${a_number_processors} ${a_cur_dir}/launcher.sh > ${a_cur_dir}/log.solver
fi


#--------------------------------------------------------------------------------------
